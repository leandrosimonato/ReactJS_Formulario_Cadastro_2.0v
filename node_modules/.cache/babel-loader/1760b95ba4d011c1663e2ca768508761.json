{"ast":null,"code":"var _jsxFileName = \"/home/leandro/Aluraaaa/ReactJS_Formulario_Cadastro_2.0v/src/components/FormularioCadastro/DadosUsuario.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport ValidacoesCadastro from \"../../contexts/ValidacoesCadastro\";\n\nfunction DadosUsuario({\n  aoEnviar\n}) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erros, setErros] = useState({\n    senha: {\n      valido: true,\n      texto: \"\"\n    }\n  });\n  const validacoes = useContext(ValidacoesCadastro);\n\n  function validarCampos(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const novoEstado = { ...erros\n    };\n    novoEstado[name] = validacoes[name](value);\n    setErros(novoEstado);\n  }\n\n  function possoEnviar() {\n    for (let campo in erros) {\n      if (!erros[campo].valido) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (possoEnviar()) {\n        aoEnviar({\n          email,\n          senha\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    id: \"email\",\n    name: \"email\",\n    label: \"email\",\n    type: \"email\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: senha,\n    onChange: event => {\n      setSenha(event.target.value);\n    },\n    onBlur: validarCampos,\n    error: !erros.senha.valido,\n    helperText: erros.senha.texto,\n    id: \"senha\",\n    name: \"senha\",\n    label: \"senha\",\n    type: \"password\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Pr\\xF3ximo\"));\n}\n\n_s(DadosUsuario, \"WAmjZOoR9CX161+7PzNcV9wNDto=\");\n\n_c = DadosUsuario;\nexport default DadosUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"DadosUsuario\");","map":{"version":3,"sources":["/home/leandro/Aluraaaa/ReactJS_Formulario_Cadastro_2.0v/src/components/FormularioCadastro/DadosUsuario.jsx"],"names":["React","useState","TextField","Button","ValidacoesCadastro","DadosUsuario","aoEnviar","email","setEmail","senha","setSenha","erros","setErros","valido","texto","validacoes","useContext","validarCampos","event","name","value","target","novoEstado","possoEnviar","campo","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport ValidacoesCadastro from \"../../contexts/ValidacoesCadastro\";\n  \nfunction DadosUsuario({ aoEnviar }) {\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erros, setErros] = useState({senha:{valido:true, texto:\"\"}})\n  const validacoes = useContext(ValidacoesCadastro);\n  \n  function validarCampos(event){\n    const {name, value} = event.target;\n    const novoEstado = { ...erros }\n    novoEstado[name] = validacoes[name](value);\n    setErros(novoEstado);\n  }\n\n  function possoEnviar() {\n    for (let campo in erros) {\n      if(!erros[campo].valido)\n      {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault();\n      if (possoEnviar()){\n        aoEnviar({email, senha});\n      }\n    }}\n    >\n      <TextField\n        value={email}\n        onChange={(event) => {\n          setEmail(event.target.value)\n        }}\n        id=\"email\"\n        name=\"email\"\n        label=\"email\"\n        type=\"email\"\n        required\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n      />\n      <TextField\n        value={senha}\n        onChange={(event) => {\n          setSenha(event.target.value)\n        }}\n        onBlur={validarCampos}\n        error={!erros.senha.valido}\n        helperText={erros.senha.texto}\n        id=\"senha\"\n        name=\"senha\"\n        label=\"senha\"\n        type=\"password\"\n        required\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Pr√≥ximo\n      </Button>\n    </form>\n  );\n}\n\nexport default DadosUsuario;"]},"metadata":{},"sourceType":"module"}